# .gitlab-ci.yml

stages:
  - build

# 1. Linux 에서 cibuildwheel 로 빌드
build_wheels_linux:
  stage: build
  image: python:3.12
  tags:
    - linux
  variables:
    # Docker Desktop 윈도우 호스트 데몬에 연결
    DOCKER_HOST: "tcp://host.docker.internal:2375"
    DOCKER_DRIVER: overlay2
    CIBW_BUILD: "cp39-* cp311-* cp312-*"
    CIBW_ARCHS_LINUX: "x86_64"
    CIBW_SKIP: "*-musllinux*"

  before_script:
    # 도커 CLI 설치 (컨테이너 내)
    - apt-get update -qq && apt-get install -qq -y docker.io
    - pip install --upgrade pip
    - pip install cibuildwheel build wheel setuptools

  script:
    - cibuildwheel --output-dir wheelhouse

  artifacts:
    paths:
      - wheelhouse/*.whl
    expire_in: 1 week

# 2. Windows 런너(태그가 'windows' 로 지정된 Runner)에서 빌드
#build_wheels_windows:
#  stage: build
#  image: mcr.microsoft.com/windows/servercore:ltsc2019
#  tags:
#    - windows
#
#  before_script:
#    # 1) 이 PowerShell 세션에서 SSL 인증서 검증 끄기
#    - pwsh -NoProfile -Command '$Env:PYTHONHTTPSVERIFY = "0"'
#    # 2) pip 업그레이드 & 빌드 도구 설치
#    - pwsh -NoProfile -Command 'py -3 -m pip install --upgrade pip'
#    - pwsh -NoProfile -Command 'py -3 -m pip install cibuildwheel build wheel setuptools'
#
#  script:
#    # 3) 빌드 실행 (SSL 검증 OFF 상태에서)
#    - pwsh -NoProfile -Command 'py -3 -m cibuildwheel --platform windows --output-dir wheelhouse'
#
#  artifacts:
#    paths:
#      - wheelhouse/*.whl
#    expire_in: 1 week